[
  {
    "model": "beta_invite.answer",
    "pk": 1,
    "fields":{
      "name": "Minimum Wage ($737. 717 COP)",
      "name_es": "Salario mínimo ($737.717 COP)",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 2,
    "fields":{
      "name": "Between $737.717 COP y $1.300.000 COP",
      "name_es": "Entre $737.717 y $1'300.000",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 3,
    "fields":{
      "name": "Between $1.300.0000 COP and $2.000.000 COP",
      "name_es": "Entre $1'300.0000 y $2'000.000",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 4,
    "fields":{
      "name": "Between $2.00.0000 COP and $3.000.000 COP",
      "name_es": "Entre $2'000.000 y $3'000.000",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 5,
    "fields":{
      "name": "More than $3.000.000 COP",
      "name_es": "Mayor a $3'000.000",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 6,
    "fields":{
      "name": "Less than 3M COP",
      "name_es": "Menos de 3M de pesos",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 7,
    "fields":{
      "name": "Between 3M COP and 6M COP",
      "name_es": "Entre 3M y 6M de pesos",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 8,
    "fields":{
      "name": "Between 6M COP and 8M COP",
      "name_es": "Entre 6M y 8M de pesos",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 9,
    "fields":{
      "name": "More than 8M COP",
      "name_es": "Más de 8M de pesos",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 10,
    "fields":{
      "name": "20",
      "name_es": "20",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 11,
    "fields":{
      "name": "21",
      "name_es": "21",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 12,
    "fields":{
      "name": "22",
      "name_es": "22",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 13,
    "fields":{
      "name": "23",
      "name_es": "23",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 14,
    "fields":{
      "name": "24",
      "name_es": "24",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 15,
    "fields":{
      "name": "I would tell him that one thing is the personal side of things and another thing is the professional side of things. And he should not mix both.",
      "name_es": "Le dejaría en claro que una cosa es la relación personal y otra es la profesional. Y que ambas no deberían mezclarse",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 17,
    "fields":{
      "name": "I would try to understand his motives in order to propose according to his line of thought and from his perspective",
      "name_es": "Trataría de entender cuáles son sus motivos; y de acuerdo a ellos propondría soluciones",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 18,
    "fields":{
      "name": "I would follow the new boss instructions in order for him to change his attitude",
      "name_es": "Seguría las instrucciones del nuevo jefe para que cambie de actitud",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 19,
    "fields":{
      "name": "I would align the interest of the whole team and negotiate with the new boss, according to everybody interest",
      "name_es": "Alinearía los intereses de todo el equipo para llegar a un acuerdo con el nuevo jefe",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 20,
    "fields":{
      "name": "I would raise my hand and speak my discomfort and why it happens",
      "name_es": "Levantaría la mano y diría cual es mi malestar y por qué",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 21,
    "fields":{
      "name": "O(1)",
      "name_es": "O(1)",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 22,
    "fields":{
      "name": "O(log(n))",
      "name_es": "O(log(n))",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 23,
    "fields":{
      "name": "O(n)",
      "name_es": "O(n)",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 24,
    "fields":{
      "name": "O(n*log(n))",
      "name_es": "O(n*log(n))",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 25,
    "fields":{
      "name": "O(n^2)",
      "name_es": "O(n^2)",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 26,
    "fields":{
      "name": "Try new things often",
      "name_es": "Experimentar nuevas cosas a menudo",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 27,
    "fields":{
      "name": "Make a diploma with worldwide experts in your area",
      "name_es": "Hacer un diplomado de la mano de expertos en tu area, a nivel mundial",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 28,
    "fields":{
      "name": "Study from the top books in the area",
      "name_es": "Estudiar de los libros más conocidos en el area",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 29,
    "fields":{
      "name": "Is a general purpose programming language such as Python or C",
      "name_es": "Es un lenguaje de programación de propósito general similar a Python o C",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 30,
    "fields":{
      "name": "It is a programming framework such as Ruby on Rails, Django or Node.js",
      "name_es": "Es un framework web como Ruby on Rails, Django o Node.js",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 31,
    "fields":{
      "name": "It is used to communicate and retreive information from databases such as PostgreSQL",
      "name_es": "Se usa para comunicarse y extraer información de bases de datos como PostgreSQL",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 32,
    "fields":{
      "name": "No",
      "name_es": "No",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 33,
    "fields":{
      "name": "Si",
      "name_es": "Sí",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 34,
    "fields":{
      "name": "Find the first duplicate element.",
      "name_es": "Encontrar el primer elemento repetido.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 35,
    "fields":{
      "name": "Find the index of the first duplicate element, additionally return -1 if there are no repeated elements.",
      "name_es": "Encontrar el índice del primer elemento repetido, adicionalemente retornar -1 si no hay elementos repetidos.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 36,
    "fields":{
      "name": "Find the first duplicate element, additionally return -1 if there are no duplicates.",
      "name_es": "Encontrar el primer elemento repetido, adicionalmente retornar -1 si no hay elementos repetidos.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 37,
    "fields":{
      "name": "Find the first duplicate element, return -1 if there are no duplicates. Also the values of the elements are between 1 and a.length",
      "name_es": "Encontrar el primer elemento repetido, retornar -1 si no hay elementos repetidos. Además los valores de los elementos están entre 1 y a.length.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 38,
    "fields":{
      "name": "The code has a bug, because indexes cannot be negative.",
      "name_es": "El código tiene un bug, ya que los indices negativos no están permitidos.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 39,
    "fields":{
      "name": "If it never finds a duplicate then it returns -1 as the problem asks.",
      "name_es": "Si nunca encuentra un elemento duplicado retorna -1 como lo exige el problema.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 40,
    "fields":{
      "name": "It is similar to 'return 0' in C. There should always be a 'return' so there are no memory leaks.",
      "name_es": "Es similar a 'return 0' en C. Siempre debe haber un 'return' para evitar leaks de memoria.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 41,
    "fields":{
      "name": "None of the above.",
      "name_es": "Ninguna de las anteriores.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 42,
    "fields":{
      "name": "mySet stores the elements that already passed. If it finds a duplicate element, it returns it. mySet is more efficient than a array.",
      "name_es": "mySet guarda los elementos por los que ya pasó. Si encuentra un elemento repetido, lo retorna. mySet es más eficiente que un arreglo.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 43,
    "fields":{
      "name": "mySet stores the indices that already passed. If it finds a duplicate element, it returns it. mySet is more efficient than an array.",
      "name_es": "mySet guarda los índices por los que ya pasó. Si encuentra un elemento repetido, lo retorna. mySet es más eficiente que un arreglo.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 44,
    "fields":{
      "name": "mySet stores the indices that already passed. If it finds a duplicate element, it returns it. mySet is less efficient than an array.",
      "name_es": "mySet guarda los índices por los que ya pasó. Si encuentra un elemento repetido, lo retorna. mySet es menos eficiente que un arreglo.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 45,
    "fields":{
      "name": "mySet stores the elements that already passed. If it finds a duplicate element, it returns it. mySet is less efficient than an array.",
      "name_es": "mySet guarda los elementos por los que ya pasó. Si encuentra un elemento repetido, lo retorna. mySet es menos eficiente que un arreglo.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 46,
    "fields":{
      "name": "The code on the right is faster because Set() inserts elements faster than the array",
      "name_es": "El código de la derecha es más veloz por que el Set() inserta elementos más rápido que el arreglo.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 47,
    "fields":{
      "name": "The code on the left is faster because Set() inserts elements slower than the array",
      "name_es": "El código de la izquierda es más veloz por que el Set() inserta elementos más lento que el arreglo.",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 48,
    "fields":{
      "name": "6",
      "name_es": "6",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 49,
    "fields":{
      "name": "17",
      "name_es": "17",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 50,
    "fields":{
      "name": "24",
      "name_es": "24",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 51,
    "fields":{
      "name": "21",
      "name_es": "21",
      "created_at": "2017-08-24 02:42:49.0957+00",
      "updated_at": "2017-08-24 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 52,
    "fields": {
      "name": "a and b",
      "name_es": "a y b",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 53,
    "fields": {
      "name": "b and c",
      "name_es": "b y c",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 54,
    "fields":{
      "name": "c and d",
      "name_es": "c y d",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 55,
    "fields":{
      "name": "a and c",
      "name_es": "a y c",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 56,
    "fields":{
      "name": "5",
      "name_es": "5",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 57,
    "fields":{
      "name": "4",
      "name_es": "4",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 58,
    "fields":{
      "name": "12",
      "name_es": "12",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 59,
    "fields":{
      "name": "16",
      "name_es": "16",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 60,
    "fields":{
      "name": "c and e",
      "name_es": "c y e",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 61,
    "fields":{
      "name": "b and c",
      "name_es": "b y c",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 62,
    "fields":{
      "name": "a and e",
      "name_es": "a y e",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 63,
    "fields":{
      "name": "a and c",
      "name_es": "a y c",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 64,
    "fields":{
      "name": "2 and 4",
      "name_es": "2 y 4",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 65,
    "fields":{
      "name": "3 and 6",
      "name_es": "3 y 6",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 66,
    "fields":{
      "name": "3 and 5",
      "name_es": "3 y 5",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 67,
    "fields":{
      "name": "2 and 3",
      "name_es": "2 y 3",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 68,
    "fields":{
      "name": "$%",
      "name_es": "$%",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 69,
    "fields":{
      "name": "%$",
      "name_es": "%$",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 70,
    "fields":{
      "name": "@$",
      "name_es": "@$",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 71,
    "fields":{
      "name": "$#",
      "name_es": "$#",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 72,
    "fields":{
      "name": "a and f",
      "name_es": "a y f",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 73,
    "fields":{
      "name": "14",
      "name_es": "14",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 74,
    "fields":{
      "name": "d and e",
      "name_es": "d y e",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 75,
    "fields":{
      "name": "1 and 6",
      "name_es": "1 y 6",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 76,
    "fields":{
      "name": "~*",
      "name_es": "~*",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 77,
    "fields":{
      "name": "1",
      "name_es": "1",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 78,
    "fields":{
      "name": "2",
      "name_es": "2",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 79,
    "fields":{
      "name": "3",
      "name_es": "3",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 80,
    "fields":{
      "name": "4",
      "name_es": "4",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 81,
    "fields":{
      "name": "5",
      "name_es": "5",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 82,
    "fields":{
      "name": "Basic",
      "name_es": "Básicos",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 83,
    "fields":{
      "name": "Intermediates",
      "name_es": "Intermedios",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 84,
    "fields":{
      "name": "Advanced",
      "name_es": "Avanzados",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 85,
    "fields":{
      "name": "None",
      "name_es": "None",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 86,
    "fields":{
      "name": "The algorithm has a bug, so it will return an error",
      "name_es": "El algoritmo tiene un bug, por lo que retornará un error",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 87,
    "fields":{
      "name": "6",
      "name_es": "6",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 88,
    "fields":{
      "name": "2",
      "name_es": "2",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 89,
    "fields":{
      "name": "Line 9, NoneType object is not iterable",
      "name_es": "línea 9, un objeto tipo nulo, no es iterable",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 90,
    "fields":{
      "name": "Line 6, we should not mix two different types of arrangements",
      "name_es": "línea 6, no debemos mezclar dos tipos diferentes de arreglos",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 91,
    "fields":{
      "name": "Line 7, the ingredients array is wrong defined",
      "name_es": "línea 7, el arreglo ingredientes está mal definido",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 92,
    "fields":{
      "name": "Line 14, the result array is wrong defined",
      "name_es": "línea 14, el arreglo resultado está mal definido",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 93,
    "fields":{
      "name": "It would take the year and divide it by 100, the result is the century",
      "name_es": "Tomaría el año y lo dividiría entre 100, el resultado es el siglo",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 94,
    "fields":{
      "name": "It would take the year and divide it by 100, to this I add a unit, the result is the century",
      "name_es": "Tomaría el año y lo dividiría entre 100, a esto le sumo una unidad, el resultado es el siglo",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 95,
    "fields":{
      "name": "It would find the module 100 of the year, if it is equal to zero, then take the year and divide it by 100, to this I add a unit, the result is the century",
      "name_es": "Hallaría el modulo 100 del año, si es igual a cero, entonces tomaría el año y lo dividiría entre 100, a esto le sumo una unidad, el resultado es el siglo",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 96,
    "fields":{
      "name": "None of the above",
      "name_es": "Ninguno de los anteriores",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 97,
    "fields":{
      "name": "On line 5, a required step is missing",
      "name_es": "En la línea 5, falta un paso obligatorio",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 98,
    "fields":{
      "name": "On line 7 and 9, the returns are reversed",
      "name_es": "En la línea 7 y 9, los return están invertidos",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 99,
    "fields":{
      "name": "On line 4. We are creating an array, and then it has to be traversed, so we must treat the problem with a nested for.",
      "name_es": "En la línea 4. Estamos creando un arreglo, y luego ha de ser recorrido, debemos entonces tratar el problema con un for anidado; es decir, un doble recorrido.",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 100,
    "fields":{
      "name": "On line 4. The index of the list is out of range, it should be [i-1]",
      "name_es": "En la línea 4. El índice de la lista está fuera del rango, debería ser [i-1] ",
      "created_at": "2018-01-26 02:42:49.0957+00",
      "updated_at": "2018-01-26 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 101,
    "fields":{
      "name": "Advanced",
      "name_es": "Avanzado",
      "created_at": "2018-02-22 02:42:49.0957+00",
      "updated_at": "2018-02-22 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 102,
    "fields":{
      "name": "Intermediate",
      "name_es": "Intermedio",
      "created_at": "2018-02-22 02:42:49.0957+00",
      "updated_at": "2018-02-22 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 103,
    "fields":{
      "name": "Basic",
      "name_es": "Básico",
      "created_at": "2018-02-22 02:42:49.0957+00",
      "updated_at": "2018-02-22 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 104,
    "fields":{
      "name": "No experience",
      "name_es": "No tengo experiencia en ventas",
      "created_at": "2018-02-22 02:42:49.0957+00",
      "updated_at": "2018-02-22 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 105,
    "fields":{
      "name": "Between 0 and 2 years of experience",
      "name_es": "Entre 0 y 2 años de experiencia",
      "created_at": "2018-02-22 02:42:49.0957+00",
      "updated_at": "2018-02-22 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 106,
    "fields":{
      "name": "More than 2 years of experience",
      "name_es": "Más de 2 años de experiencia",
      "created_at": "2018-02-22 02:42:49.0957+00",
      "updated_at": "2018-02-22 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 107,
    "fields":{
      "name": "Parque de envigado",
      "name_es": "Parque de envigado",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 108,
    "fields":{
      "name": "Mercado del río",
      "name_es": "Mercado del río",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 109,
    "fields":{
      "name": "San Fernando plaza",
      "name_es": "San Fernando plaza",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 110,
    "fields":{
      "name": "La aguacatala",
      "name_es": "La aguacatala",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 111,
    "fields":{
      "name": "Estación Floresta del metro",
      "name_es": "Estación Floresta del metro",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 112,
    "fields":{
      "name": "Universidad Nacional de Colombia",
      "name_es": "Universidad Nacional de Colombia",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 113,
    "fields":{
      "name": "Sector el estadio",
      "name_es": "Sector el estadio",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 114,
    "fields":{
      "name": "Parque de bello",
      "name_es": "Parque de bello",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 115,
    "fields":{
      "name": "Centro comercial Premium plaza",
      "name_es": "Centro comercial Premium plaza",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 116,
    "fields":{
      "name": "San Fernando plaza",
      "name_es": "San Fernando plaza",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 117,
    "fields":{
      "name": "Centro comercial Gran plaza",
      "name_es": "Centro comercial Gran plaza",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 118,
    "fields":{
      "name": "El tesoro parque comercial",
      "name_es": "El tesoro parque comercial",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 119,
    "fields":{
      "name": "Laureles",
      "name_es": "Laureles",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 120,
    "fields":{
      "name": "Estación Santa Lucía del metro",
      "name_es": "Estación Santa Lucía del metro",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 121,
    "fields":{
      "name": "Barrio Manrique",
      "name_es": "Barrio Manrique",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 122,
    "fields":{
      "name": "Belén las mercedez",
      "name_es": "Belén las mercedez",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 123,
    "fields":{
      "name": "Prado centro",
      "name_es": "Prado centro",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 124,
    "fields":{
      "name": "Universidad Eafit",
      "name_es": "Universidad Eafit",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 125,
    "fields":{
      "name": "Itagui el tablón",
      "name_es": "Itagui el tablón",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 126,
    "fields":{
      "name": "Aranjuez San Cayetano",
      "name_es": "Aranjuez San Cayetano",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 127,
    "fields":{
      "name": "Centro comercial Fundadores",
      "name_es": "Centro comercial Fundadores",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 128,
    "fields":{
      "name": "Centro comercial Cable Plaza",
      "name_es": "Centro comercial Cable Plaza",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 129,
    "fields":{
      "name": "Hospital infantil Rafael Henao Toro",
      "name_es": "Hospital infantil Rafael Henao Toro",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 130,
    "fields":{
      "name": "Universidad Católica de Manizales",
      "name_es": "Universidad Católica de Manizales",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 131,
    "fields":{
      "name": "Parque Faneón",
      "name_es": "Parque Faneón",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 132,
    "fields":{
      "name": "Barrio los Cedros",
      "name_es": "Barrio los Cedros",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 133,
    "fields":{
      "name": "Centro comercial Fundadores",
      "name_es": "Centro comercial Fundadores",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 134,
    "fields":{
      "name": "Plaza de toros de Manizales",
      "name_es": "Plaza de toros de Manizales",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 135,
    "fields":{
      "name": "Barrio el Guamal",
      "name_es": "Barrio el Guamal",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 136,
    "fields":{
      "name": "Terminal de transportes de Manizales",
      "name_es": "Terminal de transportes de Manizales",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 137,
    "fields":{
      "name": "Barrio Asis",
      "name_es": "Barrio Asis",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 138,
    "fields":{
      "name": "Aeropuerto la Nubia",
      "name_es": "Aeropuerto la Nubia",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 139,
    "fields":{
      "name": "Polideportivo Aranjuez",
      "name_es": "Polideportivo Aranjuez",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 140,
    "fields":{
      "name": "Monumento a los fundadores, barrio Chipre",
      "name_es": "Monumento a los fundadores, barrio Chipre",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 141,
    "fields":{
      "name": "Plaza de mercado Galerias",
      "name_es": "Plaza de mercado Galerias",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 142,
    "fields":{
      "name": "Parque del Agua",
      "name_es": "Parque del Agua",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 143,
    "fields":{
      "name": "Plaza de toros de Manizales",
      "name_es": "Plaza de toros de Manizales",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 144,
    "fields":{
      "name": "Villapilar",
      "name_es": "Villapilar",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 145,
    "fields":{
      "name": "Barrio la Aurora",
      "name_es": "Barrio la Aurora",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 146,
    "fields":{
      "name": "E.S.E. Hospital Departamental Universitario Santa Sofía de Caldas",
      "name_es": "E.S.E. Hospital Departamental Universitario Santa Sofía de Caldas",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 147,
    "fields":{
      "name": "Barrio el Porvenir",
      "name_es": "Barrio el Porvenir",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 148,
    "fields":{
      "name": "Zoológico de Barranquilla",
      "name_es": "Zoológico de Barranquilla",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 149,
    "fields":{
      "name": "Barrio la Concepción",
      "name_es": "Barrio la Concepción",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 150,
    "fields":{
      "name": "Centro comercial Buenavista",
      "name_es": "Centro comercial Buenavista",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 151,
    "fields":{
      "name": "Casino Elite",
      "name_es": "Casino Elite",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 152,
    "fields":{
      "name": "La campiña",
      "name_es": "La campiña",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 153,
    "fields":{
      "name": "Barrio los Nogales",
      "name_es": "Barrio los Nogales",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 154,
    "fields":{
      "name": "Parque Suri Salcedo",
      "name_es": "Parque Suri Salcedo",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 155,
    "fields":{
      "name": "Casino Aladdin",
      "name_es": "Casino Aladdin",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 156,
    "fields":{
      "name": "Barrio las delicias",
      "name_es": "Barrio las delicias",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 157,
    "fields":{
      "name": "Sector el estadio",
      "name_es": "Sector el estadio",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 158,
    "fields":{
      "name": "Barrio el Granadillo",
      "name_es": "Barrio el Granadillo",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 159,
    "fields":{
      "name": "Bellavista",
      "name_es": "Bellavista",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 160,
    "fields":{
      "name": "San Marino",
      "name_es": "San Marino",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 161,
    "fields":{
      "name": "Centro comercial Villa Carolina",
      "name_es": "Centro comercial Villa Carolina",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 162,
    "fields":{
      "name": "Barrio las Flores",
      "name_es": "Barrio las Flores",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 163,
    "fields":{
      "name": "Batallón de Policía Militar No 2",
      "name_es": "Batallón de Policía Militar No 2",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 164,
    "fields":{
      "name": "Barrio Nuevo Horizonte",
      "name_es": "Barrio Nuevo Horizonte",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 165,
    "fields":{
      "name": "Catedral Metropolitana Maria Reina de Barranquilla",
      "name_es": "Catedral Metropolitana Maria Reina de Barranquilla",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  },
  {
    "model": "beta_invite.answer",
    "pk": 166,
    "fields":{
      "name": "Sector el estadio",
      "name_es": "Sector el estadio",
      "created_at": "2018-03-02 02:42:49.0957+00",
      "updated_at": "2018-03-02 02:42:49.0957+00"
    }
  }
]
